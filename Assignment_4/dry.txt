global queue
global time
global round

main(inputfile, outputfile):
	[X] Read from input file
	[X] Create a list of connection_t;

	[X] Create a timer thread
	[X] Create controller thread
	For each connection:
		[X] Create a thread

connectionThread(connection):
	while connection.hasPacket():
		[X] Generate interArrivalTime
		[X] connection.generatePacket()
		[X] Add packet to queue
		[X] sleep(interArrivalTime)
	
controllerThread():
	double slopeFactor;
	while time <= T:
		oldRound = round;
		Get packet with minimum finish number
		transmitPacket()
		time += packetLength;
		newRound = updateRound(oldRound, packet.startTime, packet.endTime);
		while (conn = iterativeDelete()) != NULL:
			newRound = updateRound(oldRound, packet.startTime, conn.deadTime);
			slopeFactor -= conn.weight
			round = updateRound(newRound, conn.deadTime, packet.endTime);

iterativeDelete(connectionList):
	for each connection:
		if !connection.isActive():
			return connection;

	return NULL;
